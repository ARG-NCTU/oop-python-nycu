ClassDiagram {

  class Sprite {
    
  }
  
  class Level {
    player
    visible_sprites
    obstacle_sprites
    current_attack
    attack_sprites
    attackable_sprites
    ui
    upgrade
    animation_player
    magic_player
    
    __init__(self, file_name)
    add_exp(self, amount)
    get_exp(self)
    get_health(self)
    get_energy(self)
    get_pos(self)
    get_speed(self)
    
    create_map(self)
    create_attack(self)
    create_magic(self, style, strength, cost)
    player_attack_logic(self)
    damage_player(self, amount, attack_type)
    trigger_death_particles(self, pos, particle_type)
    destroy_attack(self)
    toggle_menu(self)
    run(self)
  }
 
  class Entity {
    __init__()
    move(self,speed)
    collision(self,direction)
    wave_value(self)
  }

  class Player {
    health
    energy
    exp
    speed
		__init__()
    get_status(self)
    animate(self)
    import_player_assets(self)
    get_random_position(self)
    input(self)
    cooldowns(self)
    energy_recovery(self)
  }

  class Enemy {
    health
    exp
    speed
    notice_radius
    damage_player
    
    __init__()
    get_status(self, player)
    animate(self)
		get_player_distance_direction(self, player)
    actions(self, player)
    get_damage(self, player, attack_type)
    check_death(self)
  }
  
  class Weapon {
		__init__(self,player,groups)
  }
  
  class MagicPlayer {
    __init__(self,animation_player)
    heal(self,player,strength,cost,groups)
    teleport(self,player,strength,cost,groups)
    flame(self,player,cost,groups)
  }
  
  class AnimationPlayer {
    __init__(self)
  }

  Entity -g-> Sprite
  Weapon -g-> Sprite
  Player -g-> Entity
  Enemy -g-> Entity
  Level "1" --> "0..*" Player;
  Level "1" --> "0..*" MagicPlayer;
  Level "1" --> "0..*" AnimationPlayer;
  Level "1" --> "0..*" Enemy;
  //Player "1" --> "0..*" Weapon;
  //Player "1" --> "0..*" MagicPlayer;
}
