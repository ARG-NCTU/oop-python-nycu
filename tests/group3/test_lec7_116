import add_path
import mit_ocw_exercises.lec7_debug_except as lec7
import pytest

def test_rev_list():
    L = [1,2,3,4]
    lec7.rev_list(L)
    assert L == [4,3,2,1]

def test_primes_list():
    assert lec7.primes_list(10) == [2,3,5,7]
    assert lec7.primes_list(20) == [2,3,5,7,11,13,17,19]


def test_get_ratios():
    assert lec7.get_ratios([1,2,3], [1,2,3]) == [1.0, 1.0, 1.0]
    assert lec7.get_ratios([1,2,3], [1,0,3]) == [1.0, float('nan'), 1.0]
    with pytest.raises(ValueError):
        lec7.get_ratios([1,2,'a'], [1,2,3])

def get_stats(class_list):
	new_stats = []
	for person in class_list:
		new_stats.append([person[0], person[1], avg(person[1])])
	return new_stats 
def test_get_stats():
    test_grades = [[['peter', 'parker'], [80.0, 70.0, 85.0]], 
              [['bruce', 'wayne'], [100.0, 80.0, 74.0]],
              [['captain', 'america'], [80.0, 70.0, 96.0]],
              [['deadpool'], []]]
    expected = [[['peter', 'parker'], [80.0, 70.0, 85.0], 78.33333333333333], 
                [['bruce', 'wayne'], [100.0, 80.0, 74.0], 84.66666666666667],
                [['captain', 'america'], [80.0, 70.0, 96.0], 82.0],
                [['deadpool'], [], 0.0]]
    assert lec7.get_stats(test_grades) == expected