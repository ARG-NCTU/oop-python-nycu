import add_path
import pytest
import mit_ocw_exercises.lec10_complexity_part1 as lec10

def test_linear_search():
    assert lec10.linear_search([1,2,3,4], 3) == 2
    assert lec10.linear_search([1,2,3,4], 5) == -1
    assert lec10.linear_search([], 5) == -1
    assert lec10.linear_search([1,2,3,4], 1) == 0
    assert lec10.linear_search(testList, 3) == 1

testList = [1, 3, 4, 5, 9, 18, 27]

def test_search():
    assert lec10.search([1,2,3,4], 3) == True
    assert lec10.search(testSet2, 5) == False
    assert lec10.search([], 5) == False
    assert lec10.search(testSet, 1) == True
    assert lec10.search(testSet, 4) == True

def test_isSubset():
    assert lec10.isSubset(testSet,testSet1) == True
    assert lec10.isSubset(testSet,testSet2) == False
    assert lec10.isSubset([], testSet) == True
    assert lec10.isSubset(testSet, []) == False
    assert lec10.isSubset([], []) == True

testSet = [1, 2, 3, 4, 5]
testSet1 = [1, 5, 3]
testSet2 = [1, 6]

def test_intersect():
    assert lec10.intersect([1, 2, 3], [2, 3, 4]) == [2, 3]
    assert lec10.intersect(testSet, [4, 5, 6]) == [4,5]
    assert lec10.intersect([], testSet1) == []
    assert lec10.intersect(testSet2, []) == []
    assert lec10.intersect([], []) == []