import add_path
import pytest
import mit_ocw_exercises.lec12_sorting as lec12

def test_bubble_sort():
    assert lec12.bubble_sort([4, 3, 2, 1]) == [1, 2, 3, 4]
    assert lec12.bubble_sort([1, 2, 3, 4]) == [1, 2, 3, 4]
    assert lec12.bubble_sort([4]) == [4]
    assert lec12.bubble_sort([]) == []
    assert lec12.bubble_sort([3, 2, 1]) == [1, 2, 3]

def test_merge_sort():
    assert lec12.merge_sort([4, 3, 2, 1]) == [1, 2, 3, 4]
    assert lec12.merge_sort([1, 2, 3, 4]) == [1, 2, 3, 4]
    assert lec12.merge_sort([4]) == [4]
    assert lec12.merge_sort([]) == []
    assert lec12.merge_sort([3, 2, 1]) == [1, 2, 3]

def test_selection_sort():
    assert lec12.selection_sort([4, 3, 2, 1]) == [1, 2, 3, 4]
    assert lec12.selection_sort([1, 2, 3, 4]) == [1, 2, 3, 4]
    assert lec12.selection_sort([4]) == [4]
    assert lec12.selection_sort([]) == []
    assert lec12.selection_sort([3, 2, 1]) == [1, 2, 3]


def test_merge_np():
    assert lec12.merge_np([1, 3], [2, 4]) == [1, 2, 3, 4]
    assert lec12.merge_np([1, 2], [3, 4]) == [1, 2, 3, 4]
    assert lec12.merge_np([1], [2]) == [1, 2]
    assert lec12.merge_np([], []) == []
    assert lec12.merge_np([3], [1, 2]) == [1, 2, 3]
    
def test_merge_sort_np():
    assert lec12.merge_sort_np([4, 3, 2, 1]) == [1, 2, 3, 4]
    assert lec12.merge_sort_np([1, 2, 3, 4]) == [1, 2, 3, 4]
    assert lec12.merge_sort_np([4]) == [4]
    assert lec12.merge_sort_np([]) == []
    assert lec12.merge_sort_np([3, 2, 1]) == [1, 2, 3]


    