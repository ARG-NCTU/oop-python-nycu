name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls $GITHUB_WORKSPACE/utils
      - run: echo "🍏 This job's status is ${{ job.status }}."

  # Define the job to use a Docker container
  # The job is named Pull-Docker-Image
  # The job runs on argnctu/oop:latest Docker container
  # The job executes the following steps:
  # Pull the Docker image
  container-test-job:
    runs-on: ubuntu-latest
    container:
      image: node:18
      env:
        NODE_ENV: development
      ports:
        - 80
      volumes:
        - my_docker_volume:/volume_mount
      options: --cpus 1
    steps:
      - name: Check for dockerenv file
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)

  Run-Pytest-Tests:
    runs-on: ubuntu-latest
    container:
      image: argnctu/oop:latest
      env:
        NODE_ENV: development
      ports:
        - 80
      volumes:
        - my_docker_volume:/volume_mount
      options: --cpus 1 --user root

    steps:
      - name: Check for dockerenv file
        run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)

      - name: Set permissions on temp directory
        run: chmod -R 777 /__w/_temp/

      - name: Check out repository code
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Init pytest_results.txt
        run: echo "" > $GITHUB_WORKSPACE/utils/pytest_results.txt

      - name: Run G1 tests
        run: |
          if pytest; then
            echo "group1: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group1: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group1  
        
      - name: Run G2 tests
        run: |
          if pytest; then
            echo "group2: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group2: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group2   
      
      - name: Run G3 tests
        run: |
          if pytest; then
            echo "group3: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group3: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group3   

      - name: Run G4 tests
        run: |
          if pytest; then
            echo "group4: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group4: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group4 

      - name: Run G5 tests
        run: |
          if pytest; then
            echo "group5: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group5: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group5 

      - name: Run G6 tests
        run: |
          if pytest; then
            echo "group6: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group6: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group6 

      - name: Run G7 tests
        run: |
          if pytest; then
            echo "group7: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group7: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group7 

      - name: Run G8 tests
        run: |
          if pytest; then
            echo "group8: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group8: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group8 

      - name: Run G9 tests
        run: |
          if pytest; then
            echo "group9: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group9: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group9  
        
      - name: Run G10 tests
        run: |
          if pytest; then
            echo "group10: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group10: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group10

      - name: Run G11 tests
        run: |
          if pytest; then
            echo "group11: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group11: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group11
      
      - name: Run G12 tests
        run: |
          if pytest; then
            echo "group12: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group12: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group12

      - name: Run G13 tests
        run: |
          if pytest; then
            echo "group13: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group13: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group13

      - name: Run G14 tests 
        run: |
          if pytest; then
            echo "group14: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group14: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group14

      - name: Run G15 tests
        run: |
          if pytest; then
            echo "group15: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group15: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group15

      - name: Run G16 tests
        run: |
          if pytest; then
            echo "group16: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group16: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group16

      - name: Run G17 tests
        run: |
          if pytest; then
            echo "group17: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group17: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group17

      - name: Run G18 tests
        run: |
          if pytest; then
            echo "group18: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group18: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group18

      - name: Run G19 tests
        run: |
          if pytest; then
            echo "group19: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group19: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group19

      - name: Run G20 tests
        run: |
          if pytest; then
            echo "group20: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group20: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group20
        
      - name: Run G21 tests
        run: |
          if pytest; then
            echo "group21: success" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          else
            echo "group21: failed" >> $GITHUB_WORKSPACE/utils/pytest_results.txt
          fi
        working-directory: tests/group21

      - name: Run TA tests
        run: |
          pytest
        working-directory: tests/groupTA  

      - name: Run update script
        run: |
          python3 utils/update_pytest_results.py

      - name: Upload test-status artifact
        uses: actions/upload-artifact@v4
        with:
          name: pytest-status
          path: utils/group_status.json

  Fetch-Commits-By-Authors:
    needs: Run-Pytest-Tests
    runs-on: ubuntu-latest
    steps:
      - name: Download pytest-status artifact
        uses: actions/download-artifact@v4
        with:
          name: pytest-status
          path: utils

      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
      
      - name: Ensure output directory exists
        run: mkdir -p $GITHUB_WORKSPACE/utils/oop_2025
        
      - name: Initial commit_counts.txt
        run: echo "" > $GITHUB_WORKSPACE/utils/commit_counts.txt

      - name: Authenticate gh CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
  
      - name: Fetch commits by authors
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          Authors: "LeeYinWei unknown899 neoAurora Lawrence16428 howardhung14 yoyo0213 JonathanYangSW GinoChen113511247 JumboZhang1119 peienwu1216 chxyuuu ginny923 joanna0420 dua0505 jui-pixel SamTung113511034 charles691 Tony104147 haleychang0530 Hazel-1212 tree1014 CHENG-JE lwc-ed tpvupu xiaotin22 calistayang Rickycheong0515 hfchiang Samuel11GitHub kufanghua yezh0915 fiesta0217 lucasliu0910 carabapy jing1688 weiouo-0817 NiNialpaca gamemode0701 Tonyyu2403 TerryCheese junlin27 Miiaow3011 bonnieliao774 emmazheng0318 ChocomintTW TedChueh pitinghsu max052028 113511080 houyuankai 0u88"
        run: |
          for author in $Authors; do
            COUNT=$(gh api \
              -H "Accept: application/vnd.github.v3+json" \
              "repos/ARG-NCTU/oop-python-nycu/commits?author=$author&per_page=100" \
              --paginate \
              --jq 'length')
            echo "$author: $COUNT" >> $GITHUB_WORKSPACE/utils/commit_counts.txt
          done
          cat $GITHUB_WORKSPACE/utils/commit_counts.txt

      - name: Update new commit counts and write to README.md
        run: |
          pip3 install pandas tabulate
          python3 utils/update_commit_counts.py
          python3 utils/group_status_update_readme.py

      - name: Commit changes
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git pull
          git add README.md
          git commit -m "chore: update README.md" || echo "No changes to commit"
          git push